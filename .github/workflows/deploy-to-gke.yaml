# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: lokalsi-cluster-1    # Add your cluster name here.
  GKE_ZONE: europe-central2   # Add your cluster zone here.
  DEPLOYMENT_NAME: lokalsi-front-deployment
  IMAGE: lokalsi-front

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Build the Docker image
      - name: Build
        working-directory: ./front
        run: |-
          docker build \
            --tag "europe-central2-docker.pkg.dev/$PROJECT_ID/lokalsi/lokalsi-front:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "europe-central2-docker.pkg.dev/$PROJECT_ID/lokalsi/lokalsi-front:$GITHUB_SHA"

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        working-directory: ./front/_k8s
        run: |-
          cp 01-deployment.yaml _tmp_01-deployment.yaml
          sed -i '' -e "s/APP_VERSION/$GITHUB_SHA/g" _tmp_01-deployment.yaml
          kubectl apply -f _tmp_01-deployment.yaml